{"version":3,"sources":["repositories/network/APIClient.ts","components/molecule/RrIconCount.tsx","components/organism/RrAlarmCard.tsx","components/molecule/RrSection.tsx","components/organism/RrCategoryCard.tsx","repositories/network/apis/AlarmAPI.ts","repositories/network/apis/UserAPI.ts","repositories/AlarmRepository.ts","pages/index.tsx","pages/category.tsx","components/atom/RrUserImg.tsx","components/organism/RrAlarmDrawerCard.tsx","components/molecule/RrLike.tsx","components/organism/RrAlarmDrawerModal.tsx","entities/Alarm.ts","pages/alarmDrawer.tsx","components/atom/RrInput.tsx","components/atom/RrIcon.tsx","pages/login.tsx","components/atom/RrText.tsx","repositories/UserRepository.ts","components/organism/RrDeleteModal.tsx","components/organism/RrAccount.tsx","components/organism/RrNoticeConts.tsx","components/organism/RrNotice.tsx","components/organism/RrQna.tsx","pages/my.tsx","components/organism/RrFooter.tsx","components/organism/RrHeaderModal.tsx","components/organism/RrHeader.tsx","components/layout/defaultLayout.tsx","assets/globalStyles.js","App.tsx","index.tsx"],"names":["HTTPMethod","RrIconCount","imgName","count","RrLikeWrapper","IconImg","src","process","Count","styled","div","img","RrAlarmCard","alarm","FlexColWrapper","RrAlarmCardWrapper","HeaderWrapper","Img","alt","HeaderText","user","nickname","IconWrapper","scrapCnt","likeCnt","ContentWrapper","TextWrapper","Title","title","Content","description","ImgWrapper","style","width","FlexRowWrapper","span","RrSection","className","onClick","RrSectionWrapper","StyledArrowRightCircle","size","ArrowRightCircle","props","RrCategoryCard","content","RrCategoryCardWrapper","APIClient","baseDomain","baseURL","this","timeout","request","isRead","method","GET","console","log","path","params","Promise","resolve","reject","axios","url","data","headers","authorization","then","result","response","parse","catch","err","apiError","normalizeError","error","code","status","message","raw","shared","ALARMS","alarmId","POST","PUT","AlarmAPI","AlarmRepository","a","FetchAlarms","FetchPopular","FetchMyAlarms","FetchAlarm","CreateAlarms","UpdateAlarms","FetchCategory","categoryList","IndexPage","useState","alarms","setAlarms","history","useHistory","repository","useMemo","fetchAlarms","useCallback","useEffect","Banner","CategoryListWrapper","map","category","push","AlarmListWrapper","section","categoryPage","CategoryWrapper","RrUserImg","image","RrUserImgWrapper","RrAlarmDrawerCard","userImg","userName","day","time","onoff","clickEvent","RrAlarmDrawerCardWrapper","WriterWrapper","writerData","TopContentsWrapper","Message","BottomContentsWrapper","RrLike","marginLeft","cursor","RrAlarmDrawerModal","closeFunction","openStatus","clickedAlarmData","RrAlarmDrawerModalWrapper","RrAlarmDrawerModalContentsWrapper","LeftContentWrapper","UserWrapper","id","RrLikeComponent","RightContentWrapper","Time","Day","MessageWrapper","A","href","shareUrl","ShareButton","height","viewBox","fill","xmlns","d","CloseButton","fillRule","clipRule","h3","p","button","Alarm","cronData","imageUrl","categories","alarmDrawer","clickStatus","setClickStatus","alarmData","setAlarmData","handleClick","AlarmDrawerWrapper","AlarmDrawerContentWrapper","SubTitle","calendarCondition","dayOfWeek","hour","alarmState","isActive","h2","RrInput","type","text","RrInputWrapper","placeholder","value","undefined","input","RrIcon","top","left","login","LoginWrapper","LoginInputWrapper","Form","LoginDescription","SubmitWrapper","LoginImageWrapper","form","RrText","weight","Text","USER","DELETE","UserAPI","UserRepository","Login","CreateUser","DeleteUser","CreateNickname","RrDeleteModal","deleteUser","onClickCloseButton","RrDeleteModalWrapper","ContentsWrapper","Description","ButtonWrapper","res","filter","fillOpacity","x","y","filterUnits","colorInterpolationFilters","floodOpacity","in","stdDeviation","in2","operator","mode","RrAccount","setNickname","createNickname","RrAccountWrapper","Contents","SemiTitle","onSubmit","event","preventDefault","onKeyUp","inputText","target","Button","RrNoticeConts","showFunction","RrNoticeContsWrapper","desc","date","Date","RrNotice","showCont","setShowCont","clickNotice","setClickNotice","setShowStatus","RrNoticeWrapper","render","list","index","NoticeList","to","onClickNotice","ul","li","NavLink","q","RrQna","RrQnaWrapper","QnaListWrapper","QnaList","List","myPage","location","pathname","MyPageWrapper","ProfileWrapper","UserImg","UserText","NavWrapper","StyledNavLink","component","RrFooter","RrFooterWrapper","Logo","Writer","PartColWrapper","PartWrapper","FooterWrapper","FooterContent","footer","RrHeaderModal","RrHeaderModalWrapper","onMouseLeave","LinkButton","Link","RrHeader","showModal","setShowModal","RrHeaderWrapper","MenuWrapper","MenuItem","UserName","onMouseOver","DefaultLayout","children","BodyWrapper","GlobalStyle","createGlobalStyle","App","basename","exact","alarmDrawerPage","loginPage","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.598b9142.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport axios from 'axios'\r\nimport { IApiResponse } from './APIResponse'\r\nimport { APIRequest } from './APIRequest'\r\nimport { IApiError } from './APIError'\r\n\r\nexport enum HTTPMethod {\r\n  GET = 'GET',\r\n  POST = 'POST',\r\n  DELETE = 'DELETE',\r\n  PUT = 'PUT',\r\n}\r\n\r\nexport class APIClient {\r\n  static shared = new APIClient()\r\n\r\n  // URL 설정\r\n  baseDomain = 'https://e9i4.shop/api/v1'\r\n  baseURL = `${this.baseDomain}`\r\n\r\n  // Timeout 설정\r\n  timeout: number = 15 * 1000\r\n\r\n  request<T extends IApiResponse>(request: APIRequest<T>): Promise<T> {\r\n    const isRead = request.method === HTTPMethod.GET\r\n\r\n    console.log(`=======================================`)\r\n    console.log(`🎉 API 요청 : ${request.path}`)\r\n    console.log('🎉 params :', request.params)\r\n    return new Promise<T>((resolve, reject) => {\r\n      axios\r\n        .request({\r\n          url: request.path,\r\n          method: request.method,\r\n          params: isRead && request.params,\r\n          data: request.params,\r\n          timeout: this.timeout,\r\n          baseURL: request.baseURL || this.baseURL,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            authorization:\r\n              'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NSwibmlja25hbWUiOiJhc2RhMjIyIiwiZW1haWwiOiJhM0BhLmNvbSIsImlhdCI6MTYxNjc3MTU1OCwiZXhwIjoxNjQyNjkxNTU4fQ.LlUhZl9ot2HkBCqgK70_mAD5bBSRYiN8P9WBvzOtdEY',\r\n          }, //TODO: auth토큰 임시토큰임\r\n        })\r\n        .then(result => {\r\n          console.log(request)\r\n          const response = request.parse\r\n            ? this.parse<T>(request.parse(result))\r\n            : this.parse<T>(result)\r\n\r\n          // 디버깅용\r\n          console.log('🎉 API 응답 :', response)\r\n          console.log(`=======================================`)\r\n          resolve(response)\r\n        })\r\n        .catch(err => {\r\n          const apiError = this.normalizeError(err)\r\n          reject(apiError)\r\n        })\r\n    })\r\n  }\r\n\r\n  // Default parser\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  private parse<T extends IApiResponse>(data: any): any {\r\n    console.log(data)\r\n    return data.data\r\n  }\r\n\r\n  // Convert axios error into APIError\r\n  private normalizeError(error: any): IApiError {\r\n    return {\r\n      code: error.response && error.response.status,\r\n      message: error.message,\r\n      raw: error,\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst RrIconCount = ({ imgName, count }) => {\r\n  return (\r\n    <RrLikeWrapper>\r\n      <IconImg src={process.env.PUBLIC_URL + `/image/${imgName}.png`} />\r\n      <Count>{count}</Count>\r\n    </RrLikeWrapper>\r\n  )\r\n}\r\n\r\nexport default RrIconCount\r\n\r\nconst RrLikeWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`\r\nconst IconImg = styled.img``\r\nconst Count = styled.div`\r\n  font-family: SF Pro Text;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n  letter-spacing: -0.24px;\r\n  margin-left: 6px;\r\n  margin-right: 6px;\r\n  color: #bdbdbd;\r\n`\r\n","import React, { FC } from 'react'\r\nimport styled from 'styled-components'\r\nimport RrIconCount from 'components/molecule/RrIconCount'\r\nimport { Alarm } from 'entities/Alarm'\r\n\r\ninterface RrAlarmCardProps {\r\n  alarm: Alarm\r\n}\r\n\r\nconst RrAlarmCard: FC<RrAlarmCardProps> = ({ alarm }: RrAlarmCardProps) => {\r\n  return (\r\n    <FlexColWrapper>\r\n      <RrAlarmCardWrapper>\r\n        <HeaderWrapper>\r\n          <div>\r\n            <Img\r\n              src={process.env.PUBLIC_URL + '/image/profile.png'}\r\n              alt=\"프로필\"\r\n            />\r\n            {/* <RrImage path={'~/assets/image/profile.png'} size=\"20\" /> */}\r\n            <HeaderText>{alarm.user.nickname}</HeaderText>\r\n          </div>\r\n          <IconWrapper>\r\n            <RrIconCount count={alarm.scrapCnt} imgName=\"scrap\" />\r\n            <RrIconCount count={alarm.likeCnt} imgName=\"like\" />\r\n          </IconWrapper>\r\n        </HeaderWrapper>\r\n        <ContentWrapper>\r\n          <TextWrapper>\r\n            <Title>{alarm.title}</Title>\r\n            <Content>{alarm.description}</Content>\r\n          </TextWrapper>\r\n          <ImgWrapper>\r\n            <img\r\n              src={process.env.PUBLIC_URL + '/image/alarmImg.png'}\r\n              style={{ width: '32px' }}\r\n              alt=\"이미지\"\r\n            />\r\n            {/* <RrImage path={'~/assets/image/profile.png'} size=\"32\" /> */}\r\n          </ImgWrapper>\r\n        </ContentWrapper>\r\n      </RrAlarmCardWrapper>\r\n    </FlexColWrapper>\r\n  )\r\n}\r\n\r\nexport default RrAlarmCard\r\n\r\nconst FlexRowWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\nconst FlexColWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nconst HeaderWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst RrAlarmCardWrapper = styled(FlexRowWrapper)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 110px;\r\n  padding: 10px 16px 10px 16px;\r\n  background: rgba(245, 245, 245, 0.6);\r\n  border-radius: 13px;\r\n`\r\nconst TextWrapper = styled(FlexColWrapper)`\r\n  width: calc(100% - 42px);\r\n`\r\nconst ContentWrapper = styled(FlexRowWrapper)`\r\n  justify-content: space-between;\r\n  height: 65px;\r\n`\r\nconst ImgWrapper = styled(FlexRowWrapper)`\r\n  height: 100%;\r\n  align-items: flex-end;\r\n`\r\n\r\nconst IconWrapper = styled(FlexRowWrapper)`\r\n  justify-content: flex-end;\r\n`\r\n\r\nconst Img = styled.img`\r\n  width: 20px;\r\n  height: 20px;\r\n  background: #f2f2f2;\r\n  box-sizing: border-box;\r\n  border-radius: 10px;\r\n  margin-right: 20px;\r\n`\r\n\r\nconst Title = styled.span`\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 15px;\r\n  line-height: 20px;\r\n  letter-spacing: -0.24px;\r\n  margin-top: 8px;\r\n`\r\nconst Content = styled.span`\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 15px;\r\n  line-height: 20px;\r\n  letter-spacing: -0.24px;\r\n  margin-top: 2px;\r\n`\r\nconst HeaderText = styled.span`\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 13px;\r\n  line-height: 18px;\r\n  letter-spacing: -0.08px;\r\n  color: #bdbdbd;\r\n  opacity: 95%;\r\n`\r\n","import React, { FC, HTMLProps } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ArrowRightCircle } from 'react-feather'\r\n\r\nconst RrSection: FC<HTMLProps<HTMLDivElement>> = ({\r\n  className,\r\n  title,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <RrSectionWrapper className={className}>\r\n      <Title>{title}</Title>\r\n      <IconWrapper onClick={onClick}>\r\n        <StyledArrowRightCircle size=\"25\" />\r\n      </IconWrapper>\r\n    </RrSectionWrapper>\r\n  )\r\n}\r\n\r\nexport default RrSection\r\nconst RrSectionWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Title = styled.span`\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  font-size: 24px;\r\n  line-height: 29px;\r\n`\r\nconst IconWrapper = styled.div``\r\n\r\nconst StyledArrowRightCircle = styled(ArrowRightCircle)<{ size: string }>`\r\n  cursor: pointer;\r\n  size: ${props => props.size};\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst RrCategoryCard = ({ title, content }) => {\r\n  return (\r\n    <RrCategoryCardWrapper>\r\n      <ImgWrapper />\r\n      <ContentWrapper>\r\n        <Title>{title}</Title>\r\n        <Content>{content}</Content>\r\n      </ContentWrapper>\r\n    </RrCategoryCardWrapper>\r\n  )\r\n}\r\n\r\nexport default RrCategoryCard\r\n\r\nconst RrCategoryCardWrapper = styled.div`\r\n  height: 150px;\r\n  width: 150px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #ffffff;\r\n  box-shadow: -3px 3px 6px rgba(0, 0, 0, 0.1);\r\n  border-radius: 16px;\r\n  margin-right: 40px;\r\n`\r\nconst ImgWrapper = styled.div`\r\n  background: #eeeeee;\r\n  width: 150px;\r\n  height: 93px;\r\n  border-radius: 16px 16px 0px 0px;\r\n`\r\nconst ContentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 10px;\r\n  margin-left: 16px;\r\n  margin-right: 16px;\r\n`\r\n\r\nconst Title = styled.span`\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n  line-height: 17px;\r\n`\r\nconst Content = styled.span`\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  letter-spacing: 0.122727px;\r\n  margin-top: 4px;\r\n`\r\n","import { AxiosResponse } from 'axios'\r\nimport { APIRequest } from 'repositories/network/APIRequest'\r\nimport { HTTPMethod } from 'repositories/network/APIClient'\r\nimport { Alarm } from 'entities/Alarm'\r\nimport { MyAlarmDto, CreateAlarmDto } from 'entities/dto/AlarmDto'\r\nimport { UpdateAlarmDto } from 'entities/dto/AlarmDto'\r\nimport { ICategories } from 'entities/Alarm'\r\n\r\nexport namespace AlarmAPI {\r\n  const ALARMS = 'alarms'\r\n\r\n  export class FetchAlarms implements APIRequest<Alarm[]> {\r\n    response: Alarm[]\r\n    path: string\r\n    method = HTTPMethod.GET\r\n    parse = (data: AxiosResponse) => data.data\r\n    constructor() {\r\n      this.path = `${ALARMS}`\r\n    }\r\n  }\r\n\r\n  export class FetchPopular implements APIRequest<Alarm[]> {\r\n    response: Alarm[]\r\n    path: string\r\n    method = HTTPMethod.GET\r\n    parse = (data: AxiosResponse) => data.data\r\n    constructor() {\r\n      this.path = `${ALARMS}/popular`\r\n    }\r\n  }\r\n\r\n  export class FetchMyAlarms implements APIRequest<MyAlarmDto[]> {\r\n    response: MyAlarmDto[]\r\n    path: string\r\n    method = HTTPMethod.GET\r\n    parse = (data: AxiosResponse) => data.data\r\n    constructor() {\r\n      this.path = `${ALARMS}/my`\r\n    }\r\n  }\r\n\r\n  export class FetchAlarm implements APIRequest<Alarm> {\r\n    response: Alarm\r\n    path: string\r\n    method = HTTPMethod.GET\r\n    parse = (data: AxiosResponse) => data.data\r\n    constructor(alarmId: number) {\r\n      this.path = `${ALARMS}/${alarmId}`\r\n    }\r\n  }\r\n\r\n  export class CreateAlarms implements APIRequest<MyAlarmDto> {\r\n    response: MyAlarmDto\r\n    path: string\r\n    method = HTTPMethod.POST\r\n    parse = (data: AxiosResponse) => data.data\r\n    constructor(params: CreateAlarmDto) {\r\n      this.path = `${ALARMS}`\r\n    }\r\n  }\r\n\r\n  export class UpdateAlarms implements APIRequest<Alarm> {\r\n    response: Alarm\r\n    path: string\r\n    method = HTTPMethod.PUT\r\n    parse = (data: AxiosResponse) => data.data\r\n    constructor(params: UpdateAlarmDto, alarmId: number) {\r\n      this.path = `${ALARMS}/${alarmId}`\r\n    }\r\n  }\r\n\r\n  export class FetchCategory implements APIRequest<ICategories[]> {\r\n    response: ICategories[]\r\n    path: string\r\n    method = HTTPMethod.GET\r\n    parse = (data: AxiosResponse) => data.data\r\n    constructor() {\r\n      this.path = `category`\r\n    }\r\n  }\r\n}\r\n","import { AxiosResponse } from 'axios'\r\nimport { APIRequest } from 'repositories/network/APIRequest'\r\nimport { HTTPMethod } from 'repositories/network/APIClient'\r\nimport { LoginDto } from 'entities/dto/UserDto'\r\nimport { CreateUserDto } from 'entities/dto/UserDto'\r\nimport { User } from 'entities/User'\r\n\r\nexport namespace UserAPI {\r\n  const USER = 'user'\r\n\r\n  export class Login implements APIRequest<LoginDto> {\r\n    response: LoginDto\r\n    path: string\r\n    method = HTTPMethod.GET\r\n    parse = (data: AxiosResponse) => data.data\r\n    constructor() {\r\n      this.path = `${USER}`\r\n    }\r\n  }\r\n\r\n  export class CreateUser implements APIRequest<LoginDto> {\r\n    response: LoginDto\r\n    path: string\r\n    method = HTTPMethod.POST\r\n    parse = (data: AxiosResponse) => data.data\r\n    constructor(params: CreateUserDto) {\r\n      this.path = `${USER}`\r\n    }\r\n  }\r\n\r\n  export class DeleteUser implements APIRequest<User> {\r\n    response: User\r\n    path: string\r\n    method = HTTPMethod.DELETE\r\n    parse = (data: AxiosResponse) => data.data\r\n    constructor() {\r\n      this.path = `${USER}`\r\n    }\r\n  }\r\n\r\n  export class CreateNickname implements APIRequest<User> {\r\n    response: User\r\n    path: string\r\n    method = HTTPMethod.PUT\r\n    parse = (data: AxiosResponse) => data.data\r\n    constructor(params: string) {\r\n      this.path = `${USER}`\r\n    }\r\n  }\r\n}\r\n","import { Alarm } from 'entities/Alarm'\r\nimport { APIClient } from './network/APIClient'\r\nimport { AlarmAPI } from './network/apis/AlarmAPI'\r\nimport { ICategories } from 'entities/Alarm'\r\nimport {\r\n  MyAlarmDto,\r\n  CreateAlarmDto,\r\n  UpdateAlarmDto,\r\n} from 'entities/dto/AlarmDto'\r\nexport default class AlarmRepository {\r\n  async FetchAlarms(): Promise<Alarm[]> {\r\n    return await APIClient.shared.request(new AlarmAPI.FetchAlarms())\r\n  }\r\n\r\n  async FetchPopular(): Promise<Alarm[]> {\r\n    return await APIClient.shared.request(new AlarmAPI.FetchPopular())\r\n  }\r\n\r\n  async FetchMyAlarms(): Promise<MyAlarmDto[]> {\r\n    return await APIClient.shared.request(new AlarmAPI.FetchMyAlarms())\r\n  }\r\n\r\n  async FetchAlarm(alarmId: number): Promise<Alarm> {\r\n    return await APIClient.shared.request(new AlarmAPI.FetchAlarm(alarmId))\r\n  }\r\n\r\n  async CreateAlarms(params: CreateAlarmDto): Promise<MyAlarmDto> {\r\n    return await APIClient.shared.request(new AlarmAPI.CreateAlarms(params))\r\n  }\r\n\r\n  async UpdateAlarms(params: UpdateAlarmDto, alarmId: number): Promise<Alarm> {\r\n    return await APIClient.shared.request(\r\n      new AlarmAPI.UpdateAlarms(params, alarmId),\r\n    )\r\n  }\r\n\r\n  async FetchCategory(): Promise<ICategories[]> {\r\n    return await APIClient.shared.request(new AlarmAPI.FetchCategory())\r\n  }\r\n}\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport RrAlarmCard from 'components/organism/RrAlarmCard'\r\nimport styled from 'styled-components'\r\nimport RrSection from 'components/molecule/RrSection'\r\nimport RrCategoryCard from 'components/organism/RrCategoryCard'\r\nimport { useHistory } from 'react-router-dom'\r\nimport AlarmRepository from '../repositories/AlarmRepository'\r\nimport { Alarm } from 'entities/Alarm'\r\n\r\nconst categoryList = [\r\n  {\r\n    title: '명언',\r\n    content: '당신을 자극할 명언 알림',\r\n  },\r\n  {\r\n    title: '응원',\r\n    content: '오늘 하루 힘차게 보내',\r\n  },\r\n  {\r\n    title: '건강',\r\n    content: '몸짱 되야지',\r\n  },\r\n  {\r\n    title: '쓴소리',\r\n    content: '자극이 필요할 땐?',\r\n  },\r\n  {\r\n    title: '공부 자극',\r\n    content: '지금 당장 공부 시작!',\r\n  },\r\n  {\r\n    title: '직장인',\r\n    content: '직장인들 다 모여!',\r\n  },\r\n  {\r\n    title: '학생',\r\n    content: '공부하느라 힘들지?',\r\n  },\r\n]\r\n\r\nconst IndexPage = () => {\r\n  const [alarms, setAlarms] = useState<Alarm[]>([])\r\n\r\n  const history = useHistory()\r\n  console.log(history)\r\n\r\n  const repository = useMemo(() => new AlarmRepository(), [])\r\n\r\n  const fetchAlarms = useCallback(async () => {\r\n    setAlarms(await repository.FetchAlarms())\r\n  }, [repository])\r\n\r\n  useEffect(() => {\r\n    fetchAlarms()\r\n  }, [fetchAlarms])\r\n\r\n  return (\r\n    <>\r\n      <Banner>\r\n        <Img\r\n          src={process.env.PUBLIC_URL + '/image/feed.png'}\r\n          alt=\"피드 이미지\"\r\n        />\r\n      </Banner>\r\n      <ContentWrapper>\r\n        <RrSection title=\"테마 RRRR\" className=\"mt-60\" />\r\n        <CategoryListWrapper>\r\n          {categoryList.map(category => (\r\n            <RrCategoryCard title={category.title} content={category.content} />\r\n          ))}\r\n        </CategoryListWrapper>\r\n        <RrSection\r\n          title=\"인기 RRRR\"\r\n          className=\"mt-60\"\r\n          onClick={() => history.push('/alarmdrawer')}\r\n        />\r\n        <AlarmListWrapper>\r\n          {alarms.map(alarm => (\r\n            <RrAlarmCard alarm={alarm} />\r\n          ))}\r\n        </AlarmListWrapper>\r\n      </ContentWrapper>\r\n    </>\r\n  )\r\n}\r\nexport default IndexPage\r\n\r\nconst Banner = styled.section`\r\n  width: 100%;\r\n  height: 300px;\r\n  background: #f2f2f2;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`\r\n\r\nconst Img = styled.img`\r\n  margin-right: 10%;\r\n`\r\nconst ContentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 50px;\r\n  padding-left: 10%;\r\n  padding-right: 10%;\r\n`\r\n\r\nconst CategoryListWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  margin-top: 40px;\r\n`\r\nconst AlarmListWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(400px, 400px));\r\n  grid-gap: 16px;\r\n  margin-top: 40px;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst categoryPage = () => {\r\n  return (\r\n    <CategoryWrapper>\r\n      <Title>카테고리</Title>\r\n    </CategoryWrapper>\r\n  )\r\n}\r\n\r\nexport default categoryPage\r\n\r\nconst CategoryWrapper = styled.div`\r\n  margin-left: 100px;\r\n  margin-right: 100px;\r\n  margin-top: 20px;\r\n  margin-bottom: 50px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nconst Title = styled.div`\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  font-size: 24px;\r\n  line-height: 35px;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst RrUserImg = ({ image, size }) => {\r\n  return <RrUserImgWrapper size={size} src={image}></RrUserImgWrapper>\r\n}\r\n\r\nexport default RrUserImg\r\n\r\nconst RrUserImgWrapper = styled.img<{ size: string }>`\r\n  width: ${props => props.size}px;\r\n  height: ${props => props.size}px;\r\n  border-radius: 50%;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport RrUserImg from '../atom/RrUserImg'\r\n\r\nconst RrAlarmDrawerCard = ({\r\n  userImg,\r\n  userName,\r\n  title,\r\n  message,\r\n  img,\r\n  day,\r\n  time,\r\n  onoff,\r\n  clickEvent,\r\n}) => {\r\n  // const [onOff, setOnOff] = useState('비공개')\r\n  // const handleChange = value => {\r\n  //   console.log(value)\r\n  //   value ? setOnOff('공개') : setOnOff('비공개')\r\n  // }\r\n\r\n  return (\r\n    <RrAlarmDrawerCardWrapper onClick={clickEvent}>\r\n      <WriterWrapper writerData={userName}>\r\n        <RrUserImg image={userImg} size=\"\" />\r\n        <span>{userName}</span>\r\n      </WriterWrapper>\r\n      <TopContentsWrapper>\r\n        <TextWrapper>\r\n          <Title>{title}</Title>\r\n          <Message>{message}</Message>\r\n        </TextWrapper>\r\n        <img\r\n          src={process.env.PUBLIC_URL + '/image/alarmImg.png'}\r\n          style={{ width: '62px' }}\r\n          alt=\"알람 이미지\"\r\n        />\r\n        {/* <Img bg={img} /> */}\r\n      </TopContentsWrapper>\r\n      <BottomContentsWrapper>\r\n        <span>{day}</span>\r\n        <span>{time}</span>\r\n        <span>{onoff}</span>\r\n      </BottomContentsWrapper>\r\n    </RrAlarmDrawerCardWrapper>\r\n  )\r\n}\r\n\r\nexport default RrAlarmDrawerCard\r\n\r\nconst RrAlarmDrawerCardWrapper = styled.div`\r\n  width: 416px;\r\n  /* height: 131px; */\r\n  padding: 16px 16px 11px;\r\n  background: rgba(245, 245, 245, 0.6);\r\n  border-radius: 13px;\r\n  cursor: pointer;\r\n`\r\nconst WriterWrapper = styled.div<{ writerData: string }>`\r\n  ${props => (props.writerData === '' ? 'display: none;' : null)}\r\n`\r\n\r\n// const Img = styled.div<{ bg: string }>`\r\n//   border: 1px solid #767676;\r\n//   width: 62px;\r\n//   height: 62px;\r\n//   background: url(${props => props.bg}), #767676;\r\n//   border-radius: 16px;\r\n// `\r\n\r\nconst TopContentsWrapper = styled.div`\r\n  border-bottom: 1px solid #f2f2f2;\r\n  padding-bottom: 16px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst BottomContentsWrapper = styled.div`\r\n  padding-top: 11px;\r\n  span {\r\n    margin-right: 14px;\r\n    font-size: 12px;\r\n    font-weight: 700;\r\n    color: #4f4f4f;\r\n  }\r\n`\r\n\r\nconst TextWrapper = styled.div`\r\n  span {\r\n    font-size: 15px;\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Title = styled.span`\r\n  margin-bottom: 2px;\r\n  font-weight: 600;\r\n`\r\nconst Message = styled.span`\r\n  /* font-weight: 400; */\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heart } from 'react-feather'\r\nconst RrLike = ({ count }) => {\r\n  return (\r\n    <RrLikeWrapper>\r\n      <Heart size=\"20\" style={{ marginLeft: '20px', cursor: 'pointer' }} />\r\n      <Count>{count}</Count>\r\n    </RrLikeWrapper>\r\n  )\r\n}\r\n\r\nexport default RrLike\r\n\r\nconst RrLikeWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`\r\n\r\nconst Count = styled.div`\r\n  font-family: SF Pro Text;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n  letter-spacing: -0.24px;\r\n  margin-left: 6px;\r\n  margin-right: 6px;\r\n`\r\n","import React, { FC } from 'react'\r\nimport styled from 'styled-components'\r\nimport RrUserImg from '../atom/RrUserImg'\r\nimport RrLike from '../molecule/RrLike'\r\nimport { Alarm } from '../../entities/Alarm'\r\n\r\ninterface RrAlarmDrawerModalProps {\r\n  closeFunction: Function\r\n  openStatus: boolean\r\n  clickedAlarmData: Alarm\r\n}\r\nconst RrAlarmDrawerModal: FC<RrAlarmDrawerModalProps> = ({\r\n  closeFunction,\r\n  openStatus,\r\n  clickedAlarmData,\r\n}) => {\r\n  const onClickCloseButton = () => {\r\n    closeFunction(false)\r\n  }\r\n  console.log('clickedAlarmData', clickedAlarmData)\r\n\r\n  return (\r\n    <RrAlarmDrawerModalWrapper status={openStatus}>\r\n      <RrAlarmDrawerModalContentsWrapper>\r\n        <LeftContentWrapper>\r\n          <UserWrapper>\r\n            {/* <RrUserImg image={clickedAlarmData.imageUrl} size=\"\" /> */}\r\n            <span>{clickedAlarmData.id}</span>\r\n          </UserWrapper>\r\n          <RrLikeComponent count=\"\" />\r\n        </LeftContentWrapper>\r\n        <RightContentWrapper>\r\n          <Time>오전 7:00</Time>\r\n          <Day>월/수/목</Day>\r\n          <MessageWrapper>\r\n            <Title>{clickedAlarmData.title}</Title>\r\n            <Message>{clickedAlarmData.description}</Message>\r\n          </MessageWrapper>\r\n          <MessageWrapper>\r\n            <Title>링크</Title>\r\n            <A href=\"\">{clickedAlarmData.shareUrl}</A>\r\n          </MessageWrapper>\r\n          <ShareButton>\r\n            <svg\r\n              width=\"18\"\r\n              height=\"20\"\r\n              viewBox=\"0 0 18 20\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M15 14.08C14.24 14.08 13.56 14.38 13.04 14.85L5.91 10.7C5.96 10.47 6 10.24 6 10C6 9.76 5.96 9.53 5.91 9.3L12.96 5.19C13.5 5.69 14.21 6 15 6C16.66 6 18 4.66 18 3C18 1.34 16.66 0 15 0C13.34 0 12 1.34 12 3C12 3.24 12.04 3.47 12.09 3.7L5.04 7.81C4.5 7.31 3.79 7 3 7C1.34 7 0 8.34 0 10C0 11.66 1.34 13 3 13C3.79 13 4.5 12.69 5.04 12.19L12.16 16.35C12.11 16.56 12.08 16.78 12.08 17C12.08 18.61 13.39 19.92 15 19.92C16.61 19.92 17.92 18.61 17.92 17C17.92 15.39 16.61 14.08 15 14.08Z\"\r\n                fill=\"#222222\"\r\n              />\r\n            </svg>\r\n            <span>공유하기</span>\r\n          </ShareButton>\r\n        </RightContentWrapper>\r\n        <CloseButton onClick={onClickCloseButton}>\r\n          <svg\r\n            width=\"14\"\r\n            height=\"13\"\r\n            viewBox=\"0 0 14 13\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              clipRule=\"evenodd\"\r\n              d=\"M10.9149 0.625661C11.3874 0.153103 12.1535 0.15304 12.626 0.62552C13.0985 1.098 13.0984 1.8641 12.6259 2.33666L2.93267 12.0299C2.46012 12.5024 1.69401 12.5025 1.22153 12.03C0.749054 11.5575 0.749117 10.7914 1.22167 10.3189L10.9149 0.625661Z\"\r\n              fill=\"#8E8E93\"\r\n            />\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              clipRule=\"evenodd\"\r\n              d=\"M12.549 10.2423C13.0215 10.7148 13.0214 11.4809 12.5488 11.9535C12.0763 12.426 11.3102 12.4261 10.8377 11.9536L1.29754 2.41346C0.825058 1.94098 0.825122 1.17488 1.29768 0.702321C1.77024 0.229763 2.53634 0.2297 3.00882 0.70218L12.549 10.2423Z\"\r\n              fill=\"#8E8E93\"\r\n            />\r\n          </svg>\r\n        </CloseButton>\r\n      </RrAlarmDrawerModalContentsWrapper>\r\n    </RrAlarmDrawerModalWrapper>\r\n  )\r\n}\r\n\r\nexport default RrAlarmDrawerModal\r\n\r\nconst RrAlarmDrawerModalWrapper = styled.div<{ status: boolean }>`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: rgba(34, 34, 34, 0.3);\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  display: ${props => (props.status ? 'block' : 'none')};\r\n`\r\n\r\nconst RrAlarmDrawerModalContentsWrapper = styled.div`\r\n  width: 848px;\r\n  height: 460px;\r\n  padding: 74px 30px 45px;\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 211px;\r\n  transform: translateX(-50%);\r\n\r\n  background: #ffffff;\r\n  box-shadow: 0px 0px 6px rgba(0, 0, 0, 0.3);\r\n  border-radius: 13px;\r\n\r\n  display: flex;\r\n`\r\n\r\nconst LeftContentWrapper = styled.div`\r\n  width: 427px;\r\n  height: 325px;\r\n  margin-right: 32px;\r\n  background: url('image/alarmDetail.png') #ddd;\r\n  background-size: cover;\r\n  border-radius: 16px;\r\n  position: relative;\r\n\r\n  // :nth-child(1) {\r\n  //   outline: 2px solid red;\r\n  // }\r\n`\r\n\r\nconst UserWrapper = styled.div`\r\n  position: absolute;\r\n  bottom: 15px;\r\n  left: 20px;\r\n\r\n  span {\r\n    padding-left: 6px;\r\n    color: #fff;\r\n    font-size: 13px;\r\n  }\r\n`\r\n\r\nconst RrLikeComponent = styled(RrLike)`\r\n  outline: 1px solid lime;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n`\r\n\r\nconst RightContentWrapper = styled.div`\r\n  width: 50%;\r\n`\r\n\r\nconst Time = styled.h3`\r\n  margin: 0 0 5px;\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n`\r\n\r\nconst Day = styled.span`\r\n  margin-bottom: 30px;\r\n  font-size: 16px;\r\n  display: inline-block;\r\n`\r\n\r\nconst MessageWrapper = styled.div`\r\n  margin-bottom: 12px;\r\n  padding: 10px 12px;\r\n  background: rgba(245, 245, 245, 0.6);\r\n  backdrop-filter: blur(54.3656px);\r\n  border-radius: 13px;\r\n`\r\n\r\nconst Title = styled.p`\r\n  margin: 0;\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n`\r\n\r\nconst Message = styled.span`\r\n  font-size: 15px;\r\n`\r\n\r\nconst A = styled.a`\r\n  font-size: 12px;\r\n  color: #000;\r\n  text-decoration: none;\r\n`\r\n\r\nconst ShareButton = styled.button`\r\n  border: none;\r\n  margin-top: 40px;\r\n  background-color: transparent;\r\n  position: relative;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    margin-right: 19px;\r\n    transform: translateY(-2px);\r\n  }\r\n\r\n  span {\r\n    font-size: 15px;\r\n  }\r\n\r\n  &:before {\r\n    content: '';\r\n    display: block;\r\n    width: 343px;\r\n    height: 1px;\r\n    background-color: #f2f2f2;\r\n    position: absolute;\r\n    top: -24px;\r\n  }\r\n`\r\n\r\nconst CloseButton = styled.button`\r\n  border: none;\r\n  border-radius: 50%;\r\n  width: 30px;\r\n  height: 30px;\r\n  background: rgba(249, 249, 249, 0.78);\r\n  backdrop-filter: blur(54.3656px);\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 16px;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    transform: translate(1px 2px) !important;\r\n  }\r\n`\r\n","import { User } from './User'\r\nexport class Alarm {\r\n  id: number\r\n  title: string\r\n  cronData: string\r\n  description: string\r\n  shareUrl: string\r\n  imageUrl: string\r\n  scrapCnt: number\r\n  likeCnt: number\r\n  user: User\r\n  categories: ICategories[]\r\n}\r\n\r\nexport interface ICategories {\r\n  id: number\r\n  name: string\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { FC, useCallback, useEffect, useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport RrAlarmDrawerCard from '../components/organism/RrAlarmDrawerCard'\r\nimport RrAlarmDrawerModal from '../components/organism/RrAlarmDrawerModal'\r\nimport AlarmRepository from '../repositories/AlarmRepository'\r\nimport { IAlarmDrawer } from 'entities/dto/AlarmDto'\r\nimport { Alarm } from '../entities/Alarm'\r\n\r\n// const alarmList = [\r\n//   {\r\n//     title: '아니요, 뚱인데요',\r\n//     message: '스펀지밥 전편 보기. dsfdfsdfsfsdfsdfsdfsdfsdfsfsdfsfs',\r\n//     img: 'img url',\r\n//     day: '월',\r\n//     time: '오전 4시',\r\n//     onoff: '공개 알림',\r\n//   },\r\n//   {\r\n//     title: '아니요, 뚱인데요',\r\n//     message: '스펀지밥 전편 보기. dsfdfsdfsfsdfsdfsdfsdfsdfsfsdfsfs',\r\n//     img: 'img url',\r\n//     day: '월',\r\n//     time: '오전 5시',\r\n//     onoff: '공개 알림',\r\n//   },\r\n//   {\r\n//     title: '아니요, 뚱인데요',\r\n//     message: '스펀지밥 전편 보기. dsfdfsdfsfsdfsdfsdfsdfsdfsfsdfsfs',\r\n//     img: 'img url',\r\n//     day: '월',\r\n//     time: '오전 6시',\r\n//     onoff: '공개 알림',\r\n//   },\r\n//   {\r\n//     title: '아니요, 뚱인데요',\r\n//     message: '스펀지밥 전편 보기. dsfdfsdfsfsdfsdfsdfsdfsdfsfsdfsfs',\r\n//     img: 'img url',\r\n//     day: '월',\r\n//     time: '오전 7시',\r\n//     onoff: '공개 알림',\r\n//   },\r\n//   {\r\n//     title: '아니요, 뚱인데요',\r\n//     message: '스펀지밥 전편 보기. dsfdfsdfsfsdfsdfsdfsdfsdfsfsdfsfs',\r\n//     img: 'img url',\r\n//     day: '월',\r\n//     time: '오전 8시',\r\n//     onoff: '공개 알림',\r\n//   },\r\n// ]\r\n\r\nconst alarmDrawer: FC = () => {\r\n  const [clickStatus, setClickStatus] = useState(false)\r\n  const [alarmData, setAlarmData] = useState(new Alarm())\r\n\r\n  const [alarms, setAlarms] = useState<IAlarmDrawer[]>([])\r\n\r\n  const repository = useMemo(() => new AlarmRepository(), [])\r\n\r\n  const fetchAlarms = useCallback(async () => {\r\n    setAlarms((await repository.FetchAlarms()) as IAlarmDrawer[])\r\n  }, [repository])\r\n\r\n  useEffect(() => {\r\n    fetchAlarms()\r\n  }, [fetchAlarms])\r\n\r\n  const handleClick = data => {\r\n    console.log('click')\r\n    console.log(data)\r\n    setClickStatus(true)\r\n    setAlarmData(data)\r\n    // setAlarms(data)\r\n  }\r\n\r\n  const closeModal = data => {\r\n    console.log(data)\r\n    setClickStatus(data)\r\n  }\r\n\r\n  return (\r\n    <AlarmDrawerWrapper>\r\n      <Title>알림 서랍</Title>\r\n      <AlarmDrawerContentWrapper>\r\n        <SubTitle>활성화 된 알림</SubTitle>\r\n        <AlarmListWrapper>\r\n          {alarms.map(alarm => (\r\n            <RrAlarmDrawerCard\r\n              key={alarm.id}\r\n              userImg=\"\"\r\n              userName={alarm.user.nickname}\r\n              title={alarm.title}\r\n              message={alarm.description}\r\n              img={alarm.imageUrl}\r\n              day={alarm.calendarCondition.dayOfWeek}\r\n              time={alarm.calendarCondition.hour}\r\n              onoff={alarm.alarmState.isActive}\r\n              clickEvent={() => {\r\n                handleClick(alarm)\r\n              }}\r\n            />\r\n          ))}\r\n        </AlarmListWrapper>\r\n      </AlarmDrawerContentWrapper>\r\n      <AlarmDrawerContentWrapper>\r\n        <SubTitle>비활성화 된 알림</SubTitle>\r\n        <AlarmListWrapper>\r\n          {alarms.map(alarm => (\r\n            <RrAlarmDrawerCard\r\n              key={alarm.id}\r\n              userImg=\"\"\r\n              userName={alarm.user.nickname}\r\n              title={alarm.title}\r\n              message={alarm.description}\r\n              img={alarm.imageUrl}\r\n              day={alarm.calendarCondition.dayOfWeek}\r\n              time={alarm.calendarCondition.hour}\r\n              onoff={alarm.alarmState.isActive}\r\n              clickEvent={() => {\r\n                handleClick(alarm)\r\n              }}\r\n            />\r\n          ))}\r\n        </AlarmListWrapper>\r\n      </AlarmDrawerContentWrapper>\r\n\r\n      <RrAlarmDrawerModal\r\n        closeFunction={closeModal}\r\n        openStatus={clickStatus}\r\n        clickedAlarmData={alarmData}\r\n      />\r\n    </AlarmDrawerWrapper>\r\n  )\r\n}\r\n\r\nexport default alarmDrawer\r\n\r\nconst AlarmDrawerWrapper = styled.div`\r\n  margin-bottom: 161px;\r\n  padding: 0 88px;\r\n`\r\n\r\nconst Title = styled.h2`\r\n  margin: 92px 0 69px;\r\n  text-align: center;\r\n  font-family: Noto Sans KR;\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  font-size: 24px;\r\n`\r\nconst AlarmDrawerContentWrapper = styled.div`\r\n  margin: 0 auto 50px;\r\n`\r\n\r\nconst AlarmListWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(416px, 416px));\r\n  gap: 12px 17px;\r\n`\r\n\r\nconst SubTitle = styled.h3`\r\n  border-bottom: 1px solid #bdbdbd;\r\n  padding-bottom: 14px;\r\n  font-weight: normal;\r\n  font-size: 20px;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst RrInput = ({ type, text }) => {\r\n  // const inputType = type\r\n\r\n  return (\r\n    <RrInputWrapper\r\n      type={type}\r\n      placeholder={text}\r\n      value={type === 'submit' ? text : undefined}\r\n    ></RrInputWrapper>\r\n  )\r\n}\r\n\r\nexport default RrInput\r\n\r\nconst RrInputWrapper = styled.input<{ type: string }>`\r\n  border: 1px solid #e0e0e0;\r\n  box-sizing: border-box;\r\n  border-radius: 10px;\r\n  width: 100%;\r\n  max-width: 408px;\r\n  height: 54px;\r\n  margin-bottom: 15px;\r\n  padding: 0 16px;\r\n  font-size: 16px;\r\n  line-height: 19px;\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n\r\n  ${props =>\r\n    props.type === 'submit'\r\n      ? `\r\n    color: #fff;\r\n    font-weight: bold;\r\n    background-color: #222;\r\n    cursor: pointer;\r\n  `\r\n      : null}\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst RrIcon = ({ src, alt, size, top, left }) => {\r\n  return <Img src={src} alt={alt} size={size} top={top} left={left} />\r\n}\r\n\r\nexport default RrIcon\r\n\r\nconst Img = styled.img<{ size: number; top: number; left: number }>`\r\n  width: ${props => props.size}px;\r\n  height: ${props => props.size}px;\r\n\r\n  position: absolute;\r\n  top: ${props => props.top}px;\r\n  left: ${props => props.left}px;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport RrInput from 'components/atom/RrInput'\r\nimport RrIcon from 'components/atom/RrIcon'\r\n\r\nconst login = () => {\r\n  return (\r\n    <LoginWrapper>\r\n      <LoginInputWrapper>\r\n        <Title>로그인 해주세요.</Title>\r\n        <Form>\r\n          <RrInput type=\"text\" text=\"애플 아이디\" />\r\n          <RrInput type=\"password\" text=\"비밀번호\" />\r\n          <LoginDescription>\r\n            Apple ID는 iTunes, App Store, iCloud에 로그인할 때 사용하는 이메일\r\n            주소입니다.\r\n          </LoginDescription>\r\n          <SubmitWrapper>\r\n            <RrInput type=\"submit\" text=\"애플 아이디로 로그인\" />\r\n            <RrIcon\r\n              src={process.env.PUBLIC_URL + '/image/Icon-Apple.png'}\r\n              alt=\"Icon-Apple\"\r\n              size=\"22\"\r\n              top=\"16\"\r\n              left=\"28\"\r\n            />\r\n          </SubmitWrapper>\r\n        </Form>\r\n      </LoginInputWrapper>\r\n      <LoginImageWrapper>\r\n        <Img\r\n          src={process.env.PUBLIC_URL + '/image/loginImg.png'}\r\n          alt=\"login-image\"\r\n        />\r\n      </LoginImageWrapper>\r\n    </LoginWrapper>\r\n  )\r\n}\r\n\r\nexport default login\r\n\r\nconst LoginWrapper = styled.div`\r\n  max-width: 899px;\r\n  margin: 153px auto;\r\n  // padding: 0 88px;\r\n  display: float;\r\n`\r\n\r\nconst LoginInputWrapper = styled.div`\r\n  width: 50%;\r\n  position: relative;\r\n`\r\n\r\nconst Title = styled.h2`\r\n  font-size: 36px;\r\n`\r\n\r\nconst Form = styled.form``\r\n\r\nconst LoginDescription = styled.span`\r\n  max-width: 407px;\r\n  margin-bottom: 40px;\r\n  font-size: 16px;\r\n  line-height: 19px;\r\n  display: block;\r\n`\r\n\r\nconst SubmitWrapper = styled.div`\r\n  max-width: 407px;\r\n  position: relative;\r\n`\r\n\r\nconst LoginImageWrapper = styled.div`\r\n  width: 50%;\r\n`\r\nconst Img = styled.img`\r\n  width: 100%;\r\n`\r\n","import React, { FC } from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface RrTextProps {\r\n  text: string\r\n  size?: number\r\n  weight?: number\r\n  className?: string\r\n}\r\n\r\ninterface RrTextStyleProps {\r\n  size?: number\r\n  weight?: number\r\n}\r\n\r\nconst RrText: FC<RrTextProps> = ({\r\n  text,\r\n  size = 12,\r\n  weight = 500,\r\n  className,\r\n}: RrTextProps) => (\r\n  <>\r\n    <Text className={className} weight={weight} size={size}>\r\n      {text}\r\n    </Text>\r\n  </>\r\n)\r\n\r\nexport default RrText\r\n\r\nconst Text = styled.span<RrTextStyleProps>`\r\n  font-style: normal;\r\n  font-weight: ${props => props.weight};\r\n  font-size: ${props => props.size}px;\r\n  line-height: 29px;\r\n  /* identical to box height */\r\n\r\n  text-align: center;\r\n  letter-spacing: 0.122727px;\r\n\r\n  /* Primary-Black */\r\n\r\n  color: #222222;\r\n`\r\n","import { LoginDto } from 'entities/dto/UserDto'\r\nimport { APIClient } from './network/APIClient'\r\nimport { UserAPI } from './network/apis/UserAPI'\r\nimport { CreateUserDto } from '../entities/dto/UserDto'\r\nimport { User } from '../entities/User'\r\n\r\nexport default class UserRepository {\r\n  async Login(): Promise<LoginDto> {\r\n    return await APIClient.shared.request(new UserAPI.Login())\r\n  }\r\n\r\n  async CreateUser(params: CreateUserDto): Promise<LoginDto> {\r\n    return await APIClient.shared.request(new UserAPI.CreateUser(params))\r\n  }\r\n\r\n  async DeleteUser(): Promise<User> {\r\n    return await APIClient.shared.request(new UserAPI.DeleteUser())\r\n  }\r\n\r\n  async CreateNickname(params: string): Promise<User> {\r\n    return await APIClient.shared.request(new UserAPI.CreateNickname(params))\r\n  }\r\n}\r\n","import React, { useCallback, useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport UserRepository from 'repositories/UserRepository'\r\n\r\nconst RrDeleteModal = ({ openStatus, closeFunction }) => {\r\n  const repository = useMemo(() => new UserRepository(), [])\r\n\r\n  const deleteUser = useCallback(async () => {\r\n    await repository.DeleteUser()\r\n  }, [repository])\r\n\r\n  const onClickDeleteButton = () => {\r\n    deleteUser().then(res => {\r\n      console.log(res)\r\n    })\r\n    closeFunction(false)\r\n  }\r\n\r\n  const onClickCloseButton = () => {\r\n    closeFunction(false)\r\n  }\r\n\r\n  return (\r\n    <RrDeleteModalWrapper status={openStatus}>\r\n      <ContentsWrapper>\r\n        <Title>회원 탈퇴</Title>\r\n        <Description>탈퇴 하시겠습니까?</Description>\r\n        <ButtonWrapper>\r\n          <button onClick={onClickDeleteButton}>탈퇴</button>\r\n          <button onClick={onClickCloseButton}>취소</button>\r\n        </ButtonWrapper>\r\n        <CloseButton onClick={onClickCloseButton}>\r\n          <svg\r\n            width=\"30\"\r\n            height=\"30\"\r\n            viewBox=\"0 0 30 30\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <g filter=\"url(#filter0_b)\">\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                clipRule=\"evenodd\"\r\n                d=\"M15 30C23.2843 30 30 23.2843 30 15C30 6.71573 23.2843 0 15 0C6.71573 0 0 6.71573 0 15C0 23.2843 6.71573 30 15 30Z\"\r\n                fill=\"#F9F9F9\"\r\n                fillOpacity=\"0.78\"\r\n              />\r\n            </g>\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              clipRule=\"evenodd\"\r\n              d=\"M20.6256 9.62558C20.1531 9.1531 19.387 9.15317 18.9144 9.62572L14.9235 13.6167L11.0089 9.70209C10.5364 9.22962 9.77032 9.22968 9.29776 9.70224C8.82521 10.1748 8.82514 10.9409 9.29762 11.4134L13.2122 15.328L9.22125 19.3189C8.74869 19.7915 8.74863 20.5576 9.22111 21.0301C9.69359 21.5025 10.4597 21.5025 10.9322 21.0299L14.9232 17.039L18.8378 20.9535C19.3103 21.426 20.0764 21.426 20.5489 20.9534C21.0215 20.4808 21.0215 19.7147 20.5491 19.2423L16.6345 15.3277L20.6254 11.3367C21.098 10.8642 21.0981 10.0981 20.6256 9.62558Z\"\r\n              fill=\"#8E8E93\"\r\n            />\r\n            <defs>\r\n              <filter\r\n                id=\"filter0_b\"\r\n                x=\"-54.3656\"\r\n                y=\"-54.3656\"\r\n                width=\"138.731\"\r\n                height=\"138.731\"\r\n                filterUnits=\"userSpaceOnUse\"\r\n                colorInterpolationFilters=\"sRGB\"\r\n              >\r\n                <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n                <feGaussianBlur in=\"BackgroundImage\" stdDeviation=\"27.1828\" />\r\n                <feComposite\r\n                  in2=\"SourceAlpha\"\r\n                  operator=\"in\"\r\n                  result=\"effect1_backgroundBlur\"\r\n                />\r\n                <feBlend\r\n                  mode=\"normal\"\r\n                  in=\"SourceGraphic\"\r\n                  in2=\"effect1_backgroundBlur\"\r\n                  result=\"shape\"\r\n                />\r\n              </filter>\r\n            </defs>\r\n          </svg>\r\n        </CloseButton>\r\n      </ContentsWrapper>\r\n    </RrDeleteModalWrapper>\r\n  )\r\n}\r\n\r\nexport default RrDeleteModal\r\n\r\nconst RrDeleteModalWrapper = styled.div<{ status: boolean }>`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  display: ${props => (props.status ? 'block' : 'none')};\r\n`\r\n\r\nconst ContentsWrapper = styled.div`\r\n  border-radius: 10px;\r\n  width: 375px;\r\n  margin: 30vh auto 0;\r\n  padding: 26px 0;\r\n  background-color: #fff;\r\n  position: relative;\r\n`\r\n\r\nconst Title = styled.h3`\r\n  margin: 0;\r\n  padding: 0 16px;\r\n  font-weight: 600;\r\n  font-size: 15px;\r\n  line-height: 18px;\r\n`\r\n\r\nconst Description = styled.p`\r\n  border-top: 1px solid #f2f2f2;\r\n  margin: 26px 0 31px 0;\r\n  padding: 20px 16px 0;\r\n`\r\n\r\nconst ButtonWrapper = styled.div`\r\n  padding: 0 16px;\r\n  text-align: right;\r\n\r\n  button {\r\n    width: 68px;\r\n    height: 30px;\r\n    cursor: pointer;\r\n\r\n    background: #fbe0e0;\r\n    border: none;\r\n    border-radius: 4px;\r\n    color: #ff5c5c;\r\n  }\r\n\r\n  button:nth-child(2) {\r\n    margin-left: 13px;\r\n    color: #222;\r\n    background: #e0e0e0;\r\n  }\r\n`\r\n\r\nconst CloseButton = styled.button`\r\n  border: none;\r\n  background-color: transparent;\r\n  position: absolute;\r\n  top: 16px;\r\n  right: 10px;\r\n  cursor: pointer;\r\n`\r\n","import React, { useState, useMemo, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport RrDeleteModal from './RrDeleteModal'\r\nimport UserRepository from 'repositories/UserRepository'\r\n\r\nconst RrAccount = () => {\r\n  const [clickStatus, setClickStatus] = useState(false)\r\n  const [nickname, setNickname] = useState('')\r\n\r\n  const repository = useMemo(() => new UserRepository(), [])\r\n\r\n  const createNickname = useCallback(\r\n    async nickname => {\r\n      await repository.CreateNickname(nickname)\r\n    },\r\n    [repository],\r\n  )\r\n\r\n  const onSubmitNickname = event => {\r\n    event.preventDefault()\r\n    createNickname(nickname).then(res => {\r\n      console.log(res)\r\n    })\r\n  }\r\n\r\n  const handleClick = () => {\r\n    setClickStatus(true)\r\n  }\r\n\r\n  const closeModal = (data: boolean) => {\r\n    setClickStatus(data)\r\n  }\r\n\r\n  const onKeyUpInput = event => {\r\n    const inputText = event.target.value\r\n    setNickname(inputText)\r\n  }\r\n\r\n  return (\r\n    <RrAccountWrapper>\r\n      <ContentsWrapper>\r\n        <Title>프로필 정보</Title>\r\n        <Contents>\r\n          <SemiTitle>닉네임</SemiTitle>\r\n          <Form onSubmit={onSubmitNickname}>\r\n            <input type=\"text\" onKeyUp={onKeyUpInput} />\r\n            <input type=\"submit\" value=\"저장하기\" />\r\n            {nickname !== '' ? <span>사용 가능한 닉네임 입니다.</span> : null}\r\n          </Form>\r\n        </Contents>\r\n      </ContentsWrapper>\r\n      <ContentsWrapper>\r\n        <Title>계정 설정</Title>\r\n        <Contents>\r\n          <SemiTitle>회원 탈퇴</SemiTitle>\r\n          <Description>\r\n            Rrrr에서 등록하신 알림들을 더 이상 이용할 수 없게 되며, 지금까지\r\n            기록해 온 모든 알림 및 활동 기록들을 영영 볼 수 없습니다. 알림\r\n            기록을 남기고 싶지 않은 경우 알림 삭제 이후 탈퇴를 진행해주세요.\r\n          </Description>\r\n          <ButtonWrapper>\r\n            <Button onClick={handleClick}>탈퇴하기</Button>\r\n          </ButtonWrapper>\r\n        </Contents>\r\n      </ContentsWrapper>\r\n      <RrDeleteModal openStatus={clickStatus} closeFunction={closeModal} />\r\n    </RrAccountWrapper>\r\n  )\r\n}\r\n\r\nexport default RrAccount\r\n\r\nconst RrAccountWrapper = styled.div`\r\n  padding: 40px 0;\r\n`\r\n\r\nconst ContentsWrapper = styled.div`\r\n  border-bottom: 1px solid #f2f2f2;\r\n\r\n  :nth-child(1) {\r\n    padding-bottom: 40px;\r\n  }\r\n\r\n  :nth-child(2) {\r\n    border: none;\r\n    padding-top: 40px;\r\n  }\r\n`\r\n\r\nconst Title = styled.h3`\r\n  margin-bottom: 20px;\r\n  color: #222222;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n`\r\n\r\nconst SemiTitle = styled.p`\r\n  min-width: 150px;\r\n  margin: 0;\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  display: inline-block;\r\n  flex: 1 150px;\r\n`\r\n\r\nconst Contents = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`\r\n\r\nconst Form = styled.form`\r\n  width: calc(100% - 150px);\r\n  display: inline-block;\r\n\r\n  input[type='text'] {\r\n    border: none;\r\n    border-bottom: 1px solid #e0e0e0;\r\n    width: 233px;\r\n    height: 30px;\r\n    font-size: 15px;\r\n\r\n    :focus {\r\n      outline: none;\r\n    }\r\n  }\r\n\r\n  input[type='submit'] {\r\n    width: 68px;\r\n    height: 30px;\r\n    margin-left: 16px;\r\n    background: #222222;\r\n    border: none;\r\n    border-radius: 4px;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    transform: translateY(-2px);\r\n  }\r\n\r\n  span {\r\n    font-size: 10px;\r\n    line-height: 12px;\r\n    letter-spacing: 0.122727px;\r\n    color: #4f87f5;\r\n    display: block;\r\n    margin-top: 5px;\r\n  }\r\n`\r\n\r\nconst Description = styled.span`\r\n  width: calc(100% - 150px);\r\n  display: inline-block;\r\n\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  letter-spacing: 0.122727px;\r\n  color: #4f4f4f;\r\n`\r\nconst ButtonWrapper = styled.div`\r\n  text-align: right;\r\n  flex: 1 100%;\r\n`\r\n\r\nconst Button = styled.button`\r\n  font-family: Apple SD Gothic Neo;\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  line-height: 20px;\r\n  letter-spacing: -0.24px;\r\n  text-decoration-line: underline;\r\n  color: #ff5c5c;\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n`\r\n","import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst RrNoticeConts = ({ showFunction, data }) => {\r\n  useEffect(() => {\r\n    return () => {\r\n      showFunction(false)\r\n    }\r\n  })\r\n  return (\r\n    <RrNoticeContsWrapper>\r\n      <Title>{data.desc}</Title>\r\n      <Date>{data.date}</Date>\r\n      <Description>\r\n        안녕하세요. Rrrr입니다. <br />\r\n        <br /> 서비스 오픈 관련하여 안내드립니다. <br />\r\n        <br />\r\n        Rrrr는 나만의 알람을 만들고 공유하는 앱 서비스입니다. 단순한 기본 알람이\r\n        지겨우셨나요? 오늘부터 Rrrr를 통해 나만의 커스텀 알람을 가져보세요.\r\n        다양한 사진과 문구, 링크를 추가하여 중요한 순간을 인상깊게 기억할 수\r\n        있습니다. 재미있는 알람은 공유하여 사람들과 피드에서 소통해보세요!\r\n        <br />\r\n        <br /> 감사합니다.\r\n      </Description>\r\n    </RrNoticeContsWrapper>\r\n  )\r\n}\r\n\r\nexport default RrNoticeConts\r\n\r\nconst RrNoticeContsWrapper = styled.div`\r\n  margin: 0;\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n  background-color: #fff;\r\n`\r\n\r\nconst Title = styled.h3`\r\n  margin: 0;\r\n  margin-bottom: 10px;\r\n  font-weight: bold;\r\n  font-size: 17px;\r\n  line-height: 20px;\r\n`\r\n\r\nconst Date = styled.span`\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  letter-spacing: 0.122727px;\r\n  color: #4f4f4f;\r\n`\r\n\r\nconst Description = styled.p`\r\n  border-top: 1px solid #e0e0e0;\r\n  padding-top: 36px;\r\n  font-size: 15px;\r\n  line-height: 20px;\r\n  letter-spacing: -0.24px;\r\n  color: #333333;\r\n`\r\n","import React, { useState } from 'react'\r\nimport { NavLink, Route } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport RrNoticeConts from './RrNoticeConts'\r\n\r\nconst data = [\r\n  { date: '03.20', desc: 'Rrrr 신규 프로모션 안내' },\r\n  { date: '03.17', desc: '서비스 점검 안내 (3/13(토) 00:00 ~ 01:00))' },\r\n  { date: '03.15', desc: 'Rrrr 정책 변경 안내' },\r\n  { date: '03.15', desc: '앱 내 고객센터 오픈 안내' },\r\n  { date: '03.13', desc: '서비스 오픈 안내' },\r\n]\r\n\r\nconst RrNotice = () => {\r\n  const [showCont, setShowCont] = useState(false)\r\n  const [clickNotice, setClickNotice] = useState()\r\n\r\n  const onClickNotice = list => {\r\n    setShowCont(true)\r\n    setClickNotice(list)\r\n  }\r\n\r\n  const setShowStatus = (data: boolean) => {\r\n    setShowCont(data)\r\n  }\r\n\r\n  return (\r\n    <RrNoticeWrapper>\r\n      {!showCont ? (\r\n        data.map((list, index) => (\r\n          <NoticeList key={index}>\r\n            <Date>{list.date}</Date>\r\n            <Description\r\n              to=\"/my/notice/conts\"\r\n              onClick={() => onClickNotice(list)}\r\n            >\r\n              {list.desc}\r\n            </Description>\r\n          </NoticeList>\r\n        ))\r\n      ) : (\r\n        <Route\r\n          path=\"/my/notice/conts\"\r\n          render={() => (\r\n            <RrNoticeConts showFunction={setShowStatus} data={clickNotice} />\r\n          )}\r\n        />\r\n      )}\r\n    </RrNoticeWrapper>\r\n  )\r\n}\r\n\r\nexport default RrNotice\r\n\r\nconst RrNoticeWrapper = styled.ul`\r\n  padding-left: 0;\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n\r\n  position: relative;\r\n`\r\n\r\nconst NoticeList = styled.li`\r\n  border-bottom: 1px solid #e0e0e0;\r\n  padding: 22px 16px 19px;\r\n  list-style: none;\r\n`\r\n\r\nconst Date = styled.span`\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  letter-spacing: 0.122727px;\r\n  color: #bdbdbd;\r\n  padding-right: 20px;\r\n`\r\n\r\nconst Description = styled(NavLink)`\r\n  font-size: 15px;\r\n  line-height: 20px;\r\n  color: #222;\r\n  text-decoration: none;\r\n`\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nconst data = [\r\n  { q: 'Rrrr의 사용법을 알고 싶어.' },\r\n  { q: '알림을 잘못 만들었어.' },\r\n  { q: '알림을 공유하고 싶어.' },\r\n  { q: '삭제한 알림을 복원시키고 싶어.' },\r\n]\r\n\r\nconst RrQna = () => {\r\n  return (\r\n    <RrQnaWrapper>\r\n      <ContentsWrapper>\r\n        <Title>자주 묻는 질문</Title>\r\n        <QnaListWrapper>\r\n          {data.map((list, index) => (\r\n            <QnaList key={index}>\r\n              <svg\r\n                width=\"24\"\r\n                height=\"24\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M18.7971 17.8231C19.1147 18.2152 19.0485 18.7966 18.656 19.1076C18.4001 19.3104 18.1311 19.4772 17.8355 19.6124C17.271 19.8738 16.6578 20 15.9962 20C15.1273 20 14.3245 19.7972 13.6011 19.3961C12.8733 18.9949 12.0485 18.3008 11.1134 17.3093C9.94014 17.2101 8.88595 16.8631 7.95526 16.2637C7.02457 15.6642 6.29679 14.88 5.77631 13.911C5.26024 12.9375 5 11.8603 5 10.6749C5 9.41296 5.29553 8.27268 5.89099 7.25408C6.48204 6.23549 7.29805 5.43775 8.339 4.86085C9.37996 4.28394 10.5444 4 11.8412 4C13.138 4 14.3025 4.28845 15.3434 4.86085C16.3844 5.43324 17.2004 6.23099 17.7914 7.24507C18.3825 8.25915 18.6824 9.40394 18.6824 10.6749C18.6824 11.7025 18.4839 12.649 18.0825 13.5189C17.6812 14.3887 17.1254 15.1324 16.4108 15.7454C15.6963 16.3583 14.867 16.8 13.9231 17.0704C14.276 17.4535 14.62 17.733 14.9597 17.9042C15.2993 18.0755 15.661 18.1656 16.0491 18.1656C16.6314 18.1656 17.1607 17.9989 17.6371 17.6608C18.0076 17.3994 18.5104 17.4715 18.7971 17.8231ZM7.95967 13.0186C8.34783 13.7172 8.87713 14.2625 9.5564 14.6501C10.2357 15.0377 10.9943 15.2361 11.8412 15.2361C12.6881 15.2361 13.4512 15.0423 14.126 14.6501C14.8053 14.2625 15.3346 13.7172 15.7227 13.0186C16.1109 12.32 16.305 11.5403 16.305 10.6749C16.305 9.80958 16.1109 9.02986 15.7227 8.33127C15.3346 7.63268 14.8053 7.08732 14.126 6.69972C13.4468 6.31211 12.6881 6.1138 11.8412 6.1138C10.9943 6.1138 10.2313 6.30761 9.5564 6.69972C8.87713 7.08732 8.34342 7.63268 7.95967 8.33127C7.57152 9.02986 7.37744 9.80958 7.37744 10.6749C7.37744 11.5403 7.57152 12.32 7.95967 13.0186Z\"\r\n                  fill=\"#222222\"\r\n                />\r\n              </svg>\r\n\r\n              <List to=\"/my/qna\">{list.q}</List>\r\n            </QnaList>\r\n          ))}\r\n        </QnaListWrapper>\r\n      </ContentsWrapper>\r\n      <ContentsWrapper>\r\n        <Title>이메일 문의</Title>\r\n        <span>xxxx1234@gmail.com</span>\r\n      </ContentsWrapper>\r\n    </RrQnaWrapper>\r\n  )\r\n}\r\n\r\nexport default RrQna\r\n\r\nconst RrQnaWrapper = styled.div`\r\n  padding: 40px 0;\r\n`\r\n\r\nconst ContentsWrapper = styled.div`\r\n  :nth-child(2) {\r\n    margin-top: 59px;\r\n\r\n    span {\r\n      font-size: 16px;\r\n      line-height: 19px;\r\n    }\r\n  }\r\n`\r\n\r\nconst Title = styled.h3`\r\n  margin: 0;\r\n  margin-bottom: 20px;\r\n  color: #222222;\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n`\r\n\r\nconst QnaListWrapper = styled.ul`\r\n  border-top: 1px solid #e0e0e0;\r\n  padding: 0;\r\n`\r\n\r\nconst QnaList = styled.li`\r\n  margin: 25px 0;\r\n  list-style: none;\r\n  font-size: 15px;\r\n  line-height: 20px;\r\n\r\n  svg {\r\n    transform: translateY(-1px);\r\n  }\r\n`\r\n\r\nconst List = styled(NavLink)`\r\n  margin-left: 12px;\r\n  color: #222;\r\n  text-decoration: none;\r\n`\r\n","import React from 'react'\r\nimport { NavLink, Route } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport RrText from '../components/atom/RrText'\r\nimport RrAccount from 'components/organism/RrAccount'\r\nimport RrNotice from 'components/organism/RrNotice'\r\nimport RrQna from 'components/organism/RrQna'\r\n// import RrNoticeConts from 'components/organism/RrNoticeConts'\r\n\r\nconst myPage = props => {\r\n  console.log(props.location.pathname)\r\n\r\n  return (\r\n    <MyPageWrapper>\r\n      <ProfileWrapper>\r\n        <UserImg src={process.env.PUBLIC_URL + '/image/profile.png'} />\r\n        <UserText\r\n          text=\"테스트님, 안녕하세요!\"\r\n          size={24}\r\n          weight={600}\r\n        ></UserText>\r\n      </ProfileWrapper>\r\n      <FlexRowWrapper>\r\n        <nav>\r\n          <NavWrapper>\r\n            <NavWrapper>\r\n              <li>\r\n                <StyledNavLink to=\"/my/account\">계정</StyledNavLink>\r\n              </li>\r\n              <li>\r\n                <StyledNavLink to=\"/my/notice\">공지사항</StyledNavLink>\r\n              </li>\r\n              <li>\r\n                <StyledNavLink to=\"/my/qna\">문의하기</StyledNavLink>\r\n              </li>\r\n            </NavWrapper>\r\n          </NavWrapper>\r\n        </nav>\r\n        <ContentsWrapper>\r\n          <Route path=\"/my/account\" component={RrAccount} />\r\n          <Route path=\"/my/notice\" component={RrNotice} />\r\n          <Route path=\"/my/qna\" component={RrQna} />\r\n        </ContentsWrapper>\r\n      </FlexRowWrapper>\r\n    </MyPageWrapper>\r\n  )\r\n}\r\n\r\nexport default myPage\r\n\r\nconst MyPageWrapper = styled.div`\r\n  height: 100%;\r\n  padding-bottom: 50px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-left: 10%;\r\n  padding-right: 10%;\r\n\r\n  background-color: #fafafa;\r\n`\r\n\r\nconst FlexRowWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst ProfileWrapper = styled.section`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 80px;\r\n  margin-bottom: 100px;\r\n`\r\n\r\nconst NavWrapper = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  li {\r\n    margin-top: 30px;\r\n  }\r\n  .active {\r\n    color: #222222;\r\n  }\r\n`\r\n\r\nconst ContentsWrapper = styled.div`\r\n  border-radius: 16px;\r\n  width: calc(100% - 200px);\r\n  margin-left: 100px;\r\n  padding: 0 30px;\r\n  background-color: #fff;\r\n`\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\n  text-decoration: none;\r\n\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n\r\n  letter-spacing: 0.122727px;\r\n  color: #828282;\r\n`\r\n\r\nconst UserImg = styled.img`\r\n  width: 68px;\r\n  height: 68px;\r\n  box-shadow: -3px 3px 6px rgba(0, 0, 0, 0.1);\r\n  border-radius: 16px;\r\n`\r\n\r\nconst UserText = styled(RrText)`\r\n  margin-left: 20px;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst RrFooter = () => {\r\n  return (\r\n    <RrFooterWrapper>\r\n      <Logo>Rrrr</Logo>\r\n      <WriterWrapper>\r\n        <Writer>만든 이</Writer>\r\n        <FlexRowWrapper>\r\n          <PartColWrapper>\r\n            <PartWrapper>\r\n              <Writer>UX/UI</Writer>\r\n              <Writer>김형진, 이진형, 최지우</Writer>\r\n            </PartWrapper>\r\n            <PartWrapper>\r\n              <Writer>FrontDev</Writer>\r\n              <Writer>박은재, 최형필</Writer>\r\n            </PartWrapper>\r\n          </PartColWrapper>\r\n          <PartColWrapper>\r\n            <PartWrapper className=\"ml-30\">\r\n              <Writer>iOS Dev</Writer>\r\n              <Writer>김경훈, 박진하, 윤주호, 최원석</Writer>\r\n            </PartWrapper>\r\n            <PartWrapper className=\"ml-30\">\r\n              <Writer>Backend Dev</Writer>\r\n              <Writer>임지영, 주성민, 최상희</Writer>\r\n            </PartWrapper>\r\n          </PartColWrapper>\r\n        </FlexRowWrapper>\r\n      </WriterWrapper>\r\n      <FooterWrapper>\r\n        <FooterContent>© E9i4 2021 copyright all rights reserved</FooterContent>\r\n        <FlexRowWrapper>\r\n          {/* <RrImage path={'./assets/image/mashup.png'} size=\"16\" /> */}\r\n          <FooterContent style={{ marginLeft: '10px' }}>\r\n            https://www.mash-up.it\r\n          </FooterContent>\r\n        </FlexRowWrapper>\r\n      </FooterWrapper>\r\n    </RrFooterWrapper>\r\n  )\r\n}\r\n\r\nexport default RrFooter\r\n\r\nconst RrFooterWrapper = styled.footer`\r\n  height: 300px;\r\n  background-color: #222222;\r\n  // margin-top: 50px;\r\n  padding-top: 34px;\r\n  padding-left: 10%;\r\n  padding-right: 10%;\r\n`\r\nconst FlexColWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nconst FlexRowWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst Logo = styled.span`\r\n  font-family: Gilroy;\r\n  font-style: normal;\r\n  font-weight: 800;\r\n  font-size: 24px;\r\n  line-height: 29px;\r\n  color: white;\r\n`\r\n\r\nconst WriterWrapper = styled(FlexColWrapper)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 64px;\r\n`\r\nconst PartWrapper = styled(FlexColWrapper)`\r\n  margin-top: 20px;\r\n`\r\n\r\nconst PartColWrapper = styled(FlexColWrapper)`\r\n  margin-right: 30px;\r\n`\r\n\r\nconst Writer = styled.span`\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  letter-spacing: 0.122727px;\r\n  color: #f2f2f2;\r\n`\r\nconst FooterWrapper = styled(FlexRowWrapper)`\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n`\r\nconst FooterContent = styled.div`\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  letter-spacing: 0.122727px;\r\n  color: #828282;\r\n  margin-top: 2px;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst RrHeaderModal = props => {\r\n  const onMouseleave = () => {\r\n    props.showFunction(false)\r\n  }\r\n\r\n  return (\r\n    <RrHeaderModalWrapper onMouseLeave={onMouseleave}>\r\n      <LinkButton to=\"/my/account\">\r\n        <svg\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M15.6421 14.1969C14.5406 13.9344 9.45939 13.9344 8.35787 14.1969C6.35025 14.6667 5 16.1313 5 17.7617V19.1986C5 19.6408 5.46193 20 6.03046 20H17.9695C18.5381 20 19 19.6408 19 19.1986V17.7617C19 16.1313 17.6497 14.6667 15.6421 14.1969Z\"\r\n            fill=\"#222222\"\r\n          />\r\n          <path\r\n            d=\"M12 11C13.6569 11 15 9.65685 15 8C15 6.34315 13.6569 5 12 5C10.3431 5 9 6.34315 9 8C9 9.65685 10.3431 11 12 11Z\"\r\n            fill=\"#222222\"\r\n          />\r\n        </svg>\r\n        <span>계정</span>\r\n      </LinkButton>\r\n\r\n      <LinkButton to=\"/my/notice\">\r\n        <svg\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M18.4 4H5.6C4.72 4 4.008 4.72 4.008 5.6L4 20L7.2 16.8H18.4C19.28 16.8 20 16.08 20 15.2V5.6C20 4.72 19.28 4 18.4 4ZM12.8 10.4C12.8 10.8418 12.4418 11.2 12 11.2C11.5582 11.2 11.2 10.8418 11.2 10.4V7.2C11.2 6.75817 11.5582 6.4 12 6.4C12.4418 6.4 12.8 6.75817 12.8 7.2V10.4ZM12.8 13.6C12.8 14.0418 12.4418 14.4 12 14.4C11.5582 14.4 11.2 14.0418 11.2 13.6C11.2 13.1582 11.5582 12.8 12 12.8C12.4418 12.8 12.8 13.1582 12.8 13.6Z\"\r\n            fill=\"#4F4F4F\"\r\n          />\r\n        </svg>\r\n\r\n        <span>공지사항</span>\r\n      </LinkButton>\r\n      <LinkButton to=\"/my/qna\">\r\n        <svg\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M18.4 6H5.6C4.72 6 4.008 6.675 4.008 7.5L4 16.5C4 17.325 4.72 18 5.6 18H18.4C19.28 18 20 17.325 20 16.5V7.5C20 6.675 19.28 6 18.4 6ZM18.4 8.62916C18.4 8.85886 18.2782 9.07135 18.08 9.18748L12 12.75L5.91996 9.18748C5.72177 9.07135 5.6 8.85886 5.6 8.62916C5.6 8.12918 6.14285 7.81808 6.57424 8.07084L12 11.25L17.4258 8.07084C17.8571 7.81808 18.4 8.12918 18.4 8.62916Z\"\r\n            fill=\"#4F4F4F\"\r\n          />\r\n        </svg>\r\n\r\n        <span>문의하기</span>\r\n      </LinkButton>\r\n      <Button>\r\n        <svg\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M14.767 8.2494L17.6107 11.0932L9.06155 11.0932C8.50711 11.0932 8.07786 11.5403 8.07786 12.0769C8.07786 12.6134 8.52499 13.0606 9.06155 13.0606L17.6107 13.0606L14.767 15.9043C14.5702 16.1011 14.4808 16.3515 14.4808 16.6018C14.4808 16.8522 14.5702 17.1026 14.767 17.2994C15.1604 17.6929 15.7864 17.6929 16.162 17.2994L20.7049 12.7744C21.0984 12.3809 21.0984 11.7549 20.7049 11.3793L16.1799 6.85435C15.7864 6.46087 15.1604 6.46087 14.7849 6.85435C14.3914 7.22994 14.3914 7.85592 14.767 8.2494Z\"\r\n            fill=\"#4F4F4F\"\r\n          />\r\n          <path\r\n            d=\"M9.95557 19.0163C9.95557 18.4619 9.50843 18.0326 8.97187 18.0326L5.96714 18.0326L5.96714 6.13888L8.97188 6.13888C9.52632 6.13888 9.95557 5.69175 9.95557 5.15519C9.95557 4.60074 9.50843 4.17149 8.97188 4.17149L4.98345 4.17149C4.429 4.17149 3.99976 4.61863 3.99976 5.15519L3.99975 19.0163C3.99975 19.5708 4.44689 20 4.98345 20L8.97187 20C9.52632 20 9.95557 19.5529 9.95557 19.0163Z\"\r\n            fill=\"#4F4F4F\"\r\n          />\r\n        </svg>\r\n\r\n        <span>로그아웃</span>\r\n      </Button>\r\n    </RrHeaderModalWrapper>\r\n  )\r\n}\r\n\r\nexport default RrHeaderModal\r\n\r\nconst RrHeaderModalWrapper = styled.div`\r\n  position: absolute;\r\n  top: calc(100% + 10px);\r\n  right: 6%;\r\n\r\n  background: #ffffff;\r\n  box-shadow: -3px 3px 6px rgba(0, 0, 0, 0.1);\r\n  border-radius: 10px;\r\n  width: 150px;\r\n`\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  border: none;\r\n  border-bottom: 1px solid #f2f2f2;\r\n  width: 100%;\r\n  padding: 10px 16px;\r\n  text-align: left;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n\r\n  :last-child {\r\n    border: none;\r\n  }\r\n\r\n  :hover span {\r\n    color: #000;\r\n  }\r\n\r\n  span {\r\n    font-weight: 600;\r\n    font-size: 14px;\r\n    line-height: 17px;\r\n\r\n    letter-spacing: 0.122727px;\r\n\r\n    color: #4f4f4f;\r\n  }\r\n\r\n  svg {\r\n    margin-right: 12px;\r\n  }\r\n`\r\n\r\nconst LinkButton = styled(Link)`\r\n  display: block;\r\n  border: none;\r\n  border-bottom: 1px solid #f2f2f2;\r\n  width: 100%;\r\n  padding: 10px 16px;\r\n  text-align: left;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n\r\n  :last-child {\r\n    border: none;\r\n  }\r\n\r\n  :hover span {\r\n    color: #000;\r\n  }\r\n\r\n  span {\r\n    font-weight: 600;\r\n    font-size: 14px;\r\n    line-height: 17px;\r\n\r\n    letter-spacing: 0.122727px;\r\n\r\n    color: #4f4f4f;\r\n  }\r\n\r\n  svg {\r\n    margin-right: 12px;\r\n  }\r\n`\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport RrHeaderModal from './RrHeaderModal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst RrHeader = () => {\r\n  const [showModal, setShowModal] = useState(false)\r\n  const onMouseover = () => {\r\n    console.log('mouseover')\r\n    setShowModal(true)\r\n  }\r\n\r\n  const showFunction = data => {\r\n    setShowModal(data)\r\n  }\r\n\r\n  return (\r\n    <RrHeaderWrapper>\r\n      <Logo>\r\n        <Link to=\"/\">Rrrr</Link>\r\n      </Logo>\r\n      <MenuWrapper>\r\n        <MenuItem to=\"\">피드</MenuItem>\r\n        <MenuItem to=\"/alarmdrawer\">알람 서랍</MenuItem>\r\n\r\n        <Img src={process.env.PUBLIC_URL + '/image/profile.png'} />\r\n        {/* <RrUserImg image=\"\" size=\"34\" /> */}\r\n        <UserName onMouseOver={onMouseover}>형필</UserName>\r\n      </MenuWrapper>\r\n      {showModal ? <RrHeaderModal showFunction={showFunction} /> : null}\r\n    </RrHeaderWrapper>\r\n  )\r\n}\r\n\r\nexport default RrHeader\r\n\r\nconst RrHeaderWrapper = styled.div`\r\n  height: 60px;\r\n  background: #222222;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-left: 10%;\r\n  padding-right: 10%;\r\n  align-items: center;\r\n  position: relative;\r\n`\r\n\r\nconst MenuWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`\r\n\r\nconst Img = styled.img`\r\n  width: 34px;\r\n  background-color: white;\r\n  border-radius: 50%;\r\n`\r\n\r\nconst Logo = styled.div`\r\n  font-family: Gilroy;\r\n  src: url('../../assets/font/Gilroy-ExtraBold.otf') format('otf');\r\n  font-style: normal;\r\n  font-weight: 800;\r\n  font-size: 24px;\r\n  line-height: 29px;\r\n  color: #ffffff;\r\n\r\n  * {\r\n    color: #fff;\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nconst UserName = styled.span`\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  color: #ffffff;\r\n  margin-left: 20px;\r\n  cursor: pointer;\r\n`\r\nconst MenuItem = styled(Link)`\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  margin-right: 20px;\r\n  color: #ffffff;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n`\r\n","import RrFooter from 'components/organism/RrFooter'\r\nimport RrHeader from 'components/organism/RrHeader'\r\nimport React, { FC } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst DefaultLayout: FC = ({ children }) => {\r\n  console.log(children)\r\n\r\n  return (\r\n    <>\r\n      <RrHeader />\r\n      <BodyWrapper>{children}</BodyWrapper>\r\n      <RrFooter />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DefaultLayout\r\n\r\nconst BodyWrapper = styled.div`\r\n  min-height: calc(100vh - 360px);\r\n`\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;500;700;900&display=swap');\r\n    html {\r\n        font-family: 'Apple SD Gothic Neo', 'Noto Sans KR', sans-serif;\r\n    }\r\n    .mt-60 {\r\n        margin-top: 60px\r\n    }\r\n    .ml-30 {\r\n        margin-left: 30px;\r\n    }\r\n`\r\n\r\nexport default GlobalStyle\r\n","/* External dependencies */\r\nimport IndexPage from 'pages'\r\nimport categoryPage from './pages/category'\r\nimport alarmDrawerPage from './pages/alarmDrawer'\r\nimport loginPage from './pages/login'\r\nimport myPage from './pages/my'\r\nimport React from 'react'\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom'\r\nimport DefaultLayout from 'components/layout/defaultLayout'\r\nimport GlobalStyle from 'assets/globalStyles'\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Router basename=\"/iguana\">\r\n        <DefaultLayout>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={IndexPage} />\r\n            <Route path=\"/category\" component={categoryPage} />\r\n            <Route path=\"/alarmdrawer\" component={alarmDrawerPage} />\r\n            <Route path=\"/login\" component={loginPage} />\r\n            <Route path=\"/my\" component={myPage} />\r\n          </Switch>\r\n        </DefaultLayout>\r\n      </Router>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import 'react-app-polyfill/ie11'\r\nimport 'react-app-polyfill/stable'\r\n\r\n/* External dependencies */\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { HelmetProvider } from 'react-helmet-async'\r\n\r\n/* Internal dependencies */\r\nimport App from 'App'\r\nimport 'sanitize.css/sanitize.css'\r\n\r\nReactDOM.render(\r\n  <HelmetProvider>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </HelmetProvider>,\r\n  document.getElementById('root'),\r\n)\r\n"],"sourceRoot":""}